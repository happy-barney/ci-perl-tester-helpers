#!/usr/bin/env bash

set -e -u -o pipefail

: "${BUILD_DIR:=build_dir}"

main() (
    if [[ -e dist.ini ]]; then dzil-build
    elif [[ -e minil.toml ]]; then minil-build
    elif [[ -e Build.PL ]]; then build-pl
    elif [[ -e Makefile.PL ]]; then std-perl-build
    fi
)

dzil-build() (
    dzil build --no-tgz --in "$BUILD_DIR"
)

minil-build() (
    rm -rf "$BUILD_DIR"
    minil build

    # TODO: It looks like minil doesn't accept a build directory name, so we
    # just find the last created dir and use that.
    # shellcheck disable=SC2012
    DIR=$(
        ls -td -- */ |
            head -n 1 |
            cut -d'/' -f1
    )
    mv "$DIR" "$BUILD_DIR"
)

build-pl() (
    rm -rf "$BUILD_DIR"

    perl Build.PL
    ./Build clean
    ./Build manifest
    ./Build distdir

    # Module::Build does not support a build directory, so we have to find
    # the last created dir and use that.
    DIR=$(perl -MModule::Build -e 'print Module::Build->resume->dist_dir;')
    mv "$DIR" "$BUILD_DIR"
)

std-perl-build() (
    rm -rf "$BUILD_DIR"
    perl Makefile.PL
    make
    [[ -e MANIFEST.SKIP ]] &&
        make manifest
    make distdir

    # same as with minil
    # shellcheck disable=SC2012
    DIR=$(
        ls -td -- */ |
            head -n 1 |
            cut -d'/' -f1
    )
    mv "$DIR" "$BUILD_DIR"
)

main "$@"
