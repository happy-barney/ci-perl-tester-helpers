#!/usr/bin/env bash

set -e -u -o pipefail

: "${AUTHOR_TESTING:=0}"
: "${CIRCLE_BRANCH:=""}"
: "${CODE_COVERAGE_REPORT:=""}"
: "${CODECOV_TOKEN:=""}"
: "${CODECOV_ENABLE:=$CODECOV_TOKEN}"
: "${COVERALLS_TOKEN:=""}"
: "${GITHUB_REF:=""}"
: "${TEST_DIRS:=t}"

if [[ $CODECOV_ENABLE ||
      $COVERALLS_TOKEN ||
      $CODE_COVERAGE_REPORT ]]
then
    : "${HARNESS_PERL_SWITCHES:="-MDevel::Cover=+ignore,^local/|^t/|^xt"}"
    export HARNESS_PERL_SWITCHES
fi

# remove the changes test if we're testing main
if [[ $GITHUB_REF == refs/heads/main ||
      $CIRCLE_BRANCH == main ]]
then
    rm -f xt/release/changes_has_content.t || true
    perl -pi -e "s|'xt/release/changes_has_content.t'||g" \
        xt/author/* ||
        true
fi

[[ $AUTHOR_TESTING -ne 0 && -d xt ]] &&
    TEST_DIRS="$TEST_DIRS xt"

IFS=' ' read -r -a ALL_TEST_DIRS <<<"$TEST_DIRS"

prove -lr --jobs 2 "$@" "${ALL_TEST_DIRS[@]}"

if [[ ${CODECOV_ENABLE} ]]; then
    cover -report codecov
fi

if [[ ${COVERALLS_TOKEN} ]]; then
    COVERALLS_REPO_TOKEN=$COVERALLS_TOKEN
    export COVERALLS_REPO_TOKEN
    cover -report coveralls
fi
